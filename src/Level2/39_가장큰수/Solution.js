function solution(numbers) {
  // 분석
  // 유심히 잘 살펴보면 두 요소의 합을 바탕으로 구하면 풀 수 있는 문제이다.
  // 가령 1번요소 + 2번요소 > 2번요소 + 1번요소 이면 정렬을 그대로 유지하고
  // 반대이면 바꿔주면 된다.
  // 요소들을 합쳐줄 때에는 문자열화시켜 합쳐주고,
  // 비교시에는 다시 넘버타입으로 비교하고,
  // 마지막으로 반환시에는 또 문자열화 시켜줘야 하는 디테일만 조심해주자.

  // 풀이
  // 우선 map으로 전부 문자열화 시키고 비교하는 식으로 해보자.
  // 이어서 sort를 붙여서 조건식을 바탕으로 정렬 기준을 잘 세워주고, join으로 합쳐준다.
  const result = numbers
    .map((el) => `${el}`)
    .sort((a, b) => {
      if (Number(a + b) > Number(b + a)) return -1;
      else return 1;
    })
    .join("");

  // 하다가 도저히 마지막 테스트 11번이 안되서 구글링해보니
  // 배열이 [0,0,0 ...] 인 경우가 있다고 한다.
  // 이러면 0이 나오지 않고 000...이 나와서 실패할 것이다.
  // 이런 부분은 쉽게 캐치하기 어렵다. 좋은 깨달음이었다고 생각해야겠다.
  // 조건식을 주자. 0이 몇개든 답은 0.
  if (result[0] === "0") return "0";
  return result;
}
