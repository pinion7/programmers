function solution(A,B){
  // 분석
  // 존재하는 가장 큰 수와 가장 작은 수를 곱하고,
  // 그 다음 큰 수와 작은 수를 또 곱해서 지워나가는 방식이, 
  // 최종적으로 가장 작은 결과물을 산출할 수 있는 방법이다. 
  
  // 풀이
  // 1. 하나는 오름차순, 하나는 내림차순 정렬을 한다.
  // 둘 중 어느 것을 오름차순하고 내림차순할지는 상관이 없다.
  // 어차피 한쪽의 최소값은 다른 한쪽의 최대값과 곱해지고
  // 한쪽의 최대값은 다른 한쪽의 최소값과 곱해지기 때문이다.
  // 단지 진행 순서에 차이만 있을 뿐이다.
  A.sort((a, b) => a - b);
  B.sort((a, b) => b - a);
  
  // 2. 리듀스로 곱셈값을 계속 합산해가면서 결과물을 반환해주면 된다.
  return A.reduce((acc, curr, idx) => {
      return acc += curr * B[idx];
  }, 0)
}